{"version":3,"sources":["images/icon.png","Countdown.js","Navigation.js","Clock.js","Timers.js","Mainpage.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Countdown","props","state","date","eventname","handleChange","bind","onFormSubmit","handleTextChange","newdate","this","setState","startDate","event","target","value","e","preventDefault","document","getElementById","classList","add","sendEvent","username","eventdate","countdownitem","user","time","getTime","fetch","method","headers","body","JSON","stringify","then","response","status","console","log","catch","err","warn","Accordion","className","Card","Header","Toggle","as","eventKey","Collapse","onSubmit","id","placeholder","onChange","selected","showTimeSelect","dateFormat","withPortal","React","Component","Navigation","handleClick","innerHTML","passUserName","Form","inline","FormControl","type","Button","variant","onClick","Clock","Date","days","hours","min","sec","interval","setInterval","calculateCountdown","stop","prevProps","clearInterval","endDate","diff","parse","timeLeft","years","millisec","Math","floor","Timers","itemdate","timers","timerData","Object","keys","length","countdowns","style","color","timermap","i","dateString","toString","dateEvent","push","map","item","bg","text","width","Body","Text","Login","email","handleUserChange","handleEmailChange","login","signup","loginData","signupData","CardColumns","Title","Group","controlId","Label","sm","Control","HeaderIcon","icon","Icon","name","Divider","hidden","Subheader","Image","src","logo","fluid","App","getUsername","navUsername","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.98621299.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.692eaa51.png\";","import React from 'react';\nimport './App.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Accordion from 'react-bootstrap/accordion';\nimport Card from 'react-bootstrap/card';\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: null, eventname: 'Enter event name'};\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleChange(newdate) {\n    this.setState({\n      startDate: newdate\n    })\n  }\n\n  handleTextChange(event) {\n    this.setState({\n      eventname: event.target.value\n    })\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    this.setState((state,props) => (\n      {date: state.startDate, eventname: state.eventname}));\n    document.getElementById('event-text').classList.add('saved-text');\n    this.sendEvent();\n  }\n\n  async sendEvent() {\n    //{\"user\":\"user1\",\"event\":\"its a random tuesday\", \"time\":1590125266}\n    let username = this.props.username;\n    let eventname = this.state.eventname;\n    let eventdate = this.state.startDate;\n    let countdownitem = {user: username, event: eventname, time: eventdate.getTime()};\n\n    let response = await fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/setnewcountdown', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(countdownitem)\n    }).then(function (response) {\n      if(response.status === 200) {\n        console.log(\"countdown date has been sent\",countdownitem);\n      } else if(response.status > 399){\n        console.log(\"countdown date has wasnt sent, check errors\");\n      }\n    }).catch(function (err) {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  render() {\n    return (\n      <Accordion className=\"accordion-countdown\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\n              Add new countdown\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <div className=\"countdown-new\">\n              <form onSubmit={ this.onFormSubmit }>\n              <div className=\"form-group\">\n                <div className=\"event-group\">\n                  <textarea\n                    id=\"event-text\"\n                    placeholder=\"Your event name..\"\n                    onChange={this.handleTextChange}>\n                  </textarea>\n                </div>\n                <DatePicker\n                  className=\"date-picker\"\n                  selected={this.state.startDate}\n                  onChange={this.handleChange}\n                  showTimeSelect\n                  dateFormat=\"MMMM d, yyyy h:mm aa\"\n                  withPortal/>\n                <button\n                  className=\"btn btn-primary\">Start Countdown\n                </button>\n              </div>\n              </form>\n            </div>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/form';\nimport FormControl from 'react-bootstrap/formcontrol';\nimport Button from 'react-bootstrap/button';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {username: \"user1\"};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleClick(event) {\n    document.getElementById('user-display').innerHTML = \"Welcome \" + this.state.username;\n    document.getElementById('user-name').value = '';\n    this.props.passUserName(this.state.username);\n  }\n\n  handleTextChange(event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form inline>\n          <FormControl\n            type=\"text\"\n            placeholder=\"enter username..\"\n            className=\"mr-sm-2\"\n            id=\"user-name\"\n            onChange={this.handleTextChange} />\n          <Button\n            variant=\"success\"\n            onClick={this.handleClick}>Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState((state,props) => ({date: props.date}));\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentDidUnmount() {\n    this.stop();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState((state,props) => ({date: props.date}));\n    }\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  stop() {\n     clearInterval(this.interval);\n   }\n\n  calculateCountdown(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      millisec: 0,\n    };\n\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n       timeLeft.years = Math.floor(diff / (365.25 * 86400));\n       diff -= timeLeft.years * 365.25 * 86400;\n     }\n    if (diff >= 86400) { // 24 * 60 * 60\n       timeLeft.days = Math.floor(diff / 86400);\n       diff -= timeLeft.days * 86400;\n     }\n    if (diff >= 3600) { // 60 * 60\n       timeLeft.hours = Math.floor(diff / 3600);\n       diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n       timeLeft.min = Math.floor(diff / 60);\n       diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n\n  }\n\n  render() {\n    const { days, hours, min, sec } = this.state\n\n    return (\n      <div>\n        <h3 className=\"countdown-text\">{ days } days, { hours } hrs, { min } min, { sec } s remaining</h3>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/card';\nimport Clock from './Clock.js';\n\nclass Timers extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  dateObj(itemdate) {\n    return new Date(itemdate);\n  }\n\n  render() {\n    let timers = this.props.timerData;\n\n    if (Object.keys(timers).length === 0) {\n      return null;\n    }\n\n    if (timers.countdowns === null) {\n      return (\n        <p style={{ color: 'white' }}>You don't have any countdowns, add some!</p>\n      )\n    }\n\n    let timermap = [];\n    for ( var i = 0; i < timers.countdowns.length; i++) {\n      let date = new Date(timers.countdowns[i].time);\n      let dateString = date.toString();\n      let dateEvent = timers.countdowns[i].event;\n      timermap.push({date, dateString, dateEvent});\n    }\n\n    return (\n      timermap.map(item => (\n        <>\n         <Card\n           className='timer-card'\n           bg='light'\n           text='dark'\n           style={{ width: '83rem' }}>\n           <Card.Header>{item.dateEvent}</Card.Header>\n           <Card.Body>\n             <Card.Text>\n               {item.dateString}\n             </Card.Text>\n             <Clock date={item.date}/>\n           </Card.Body>\n         </Card>\n         <br />\n       </>\n    )));\n  }\n }\n\n export default Timers;\n","import React from 'react';\nimport './App.css';\nimport Countdown from './Countdown.js';\nimport Navigation from './Navigation.js';\nimport Timers from './Timers.js';\n\nclass Mainpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: null, timerData: {} };\n  }\n\n  getUsername = (navUsername) => {\n    this.setState({ username: navUsername })\n  }\n\n  componentDidMount() {\n    if (this.state.username !== null) {\n      this.getUserEvents();\n    }\n  }\n\n  getUserEvents() {\n    if (this.state.username !== null) {\n      let promiseresult = new Promise(resolve => {\n        fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/getuser?id='+this.state.username).then(function (response) {\n      \t    resolve(response.json());\n          });\n        }).catch(function (err) {\n      \t  console.warn('Something went wrong.', err);\n        });\n\n      promiseresult.then(result => {\n        this.setState({timerData: result});\n      }, function(error) {\n        console.log(\"there is an error inside promise\", error);;\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"Mainpage\">\n        <Navigation passUserName={this.getUsername}/>\n        <Countdown username={this.state.username}/>\n        <Timers timerData={this.state.timerData} username={this.state.username}/>\n      </div>\n    );\n  }\n}\n\nexport default Mainpage;\n","import React from 'react';\nimport Form from 'react-bootstrap/form';\nimport Button from 'react-bootstrap/button';\nimport Card from 'react-bootstrap/card';\nimport CardColumns from 'react-bootstrap/cardcolumns';\nimport './App.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {user: \"user\", email: \"email\"};\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.login = this.login.bind(this);\n    this.signup = this.signup.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n    let user = this.state.user;\n    let loginData = {user: user};\n    console.log(\"loginData\", loginData);\n\n    fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(loginData)\n    }).then(function (response) {\n      if(response.status === 200) {\n        console.log(\"login was a success\",response);\n      } else if(response.status > 399){\n        console.log(\"user name doesn't exist\");\n      }\n    }).catch(function (err) {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  signup(e) {\n    e.preventDefault();\n    let user = this.state.user;\n    let email = this.state.email;\n    let signupData = {user: user, email: email};\n    console.log(\"signupData\", signupData);\n\n    fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(signupData)\n    }).then(function (response) {\n      if(response.status === 200) {\n        console.log(\"signup is a success\",response);\n      } else if(response.status > 399){\n        console.log(\"user name is not available, choose another\");\n      }\n    }).catch(function (err) {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  handleUserChange(event) {\n    this.setState({\n      user: event.target.value\n    })\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <CardColumns>\n        <Card className=\"p-3\">\n          <Card.Header>Been here before?\n            <Card.Title className=\"text-muted\">Welcome back!</Card.Title>\n          </Card.Header>\n          <Form>\n            <Form.Group controlId=\"formBasicUser\">\n              <Form.Label sm=\"2\">Username</Form.Label>\n              <Form.Control\n               type=\"text\"\n               placeholder=\"Username\"\n               onChange={this.handleUserChange} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.login}>\n              Login\n            </Button>\n          </Form>\n        </Card>\n        <Card className=\"p-3\">\n          <Card.Header>First time?\n            <Card.Title className=\"text-muted\">Hey there, let's get to know you</Card.Title>\n          </Card.Header>\n          <Form>\n            <Form.Group controlId=\"formBasicUser\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={this.handleUserChange} />\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleEmailChange} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.signup}>\n              Signup\n            </Button>\n          </Form>\n        </Card>\n      </CardColumns>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Mainpage from './Mainpage.js';\nimport Login from './Login.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header, Icon, Image, Divider } from 'semantic-ui-react';\nimport logo from './images/icon.png';\n\nconst HeaderIcon = () => (\n  <Header as='h1' icon>Count Me In!\n    <Icon name='clock' />\n    <Divider hidden />\n    <Header.Subheader>\n      Create personalized countdown timers\n    </Header.Subheader>\n    <Image src={logo} fluid />\n  </Header>\n)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: null, timerData: {} };\n  }\n\n  getUsername = (navUsername) => {\n    this.setState({ username: navUsername })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <HeaderIcon />\n        <Login />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}