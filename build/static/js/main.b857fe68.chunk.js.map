{"version":3,"sources":["images/icon.png","Clock.js","Timers.js","Countdown.js","Navigation.js","Mainpage.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Clock","props","state","date","Date","days","hours","min","sec","this","setState","interval","setInterval","calculateCountdown","stop","prevProps","clearInterval","endDate","diff","parse","timeLeft","years","millisec","Math","floor","className","React","Component","Timers","itemdate","timers","timerData","Object","keys","length","countdowns","style","color","timermap","i","time","dateString","toString","dateEvent","event","push","map","item","Card","bg","text","width","Header","Body","Text","Countdown","eventname","refresh","handleChange","bind","onFormSubmit","handleTextChange","newdate","startDate","target","value","e","preventDefault","sendEvent","username","eventdate","countdownitem","user","getTime","fetch","method","headers","body","JSON","stringify","then","response","status","passRefresh","console","log","catch","err","warn","Accordion","Toggle","id","as","eventKey","Collapse","onSubmit","placeholder","onChange","selected","showTimeSelect","dateFormat","withPortal","placeholderText","Mainpage","getRefresh","getUserEvents","prevState","Promise","resolve","json","result","error","Jumbotron","Login","email","loginerror","signuperror","redirect","handleUserChange","handleEmailChange","login","signup","loginData","passUserName","passRedirect","signupData","CardColumns","Title","Form","Group","controlId","Label","sm","Control","type","Button","variant","onClick","HeaderIcon","icon","Icon","name","Divider","hidden","Subheader","Image","src","logo","fluid","App","getUsername","navUsername","getRedirect","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b857fe68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.692eaa51.png\";","import React from 'react';\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      date: new Date(),\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    };\n  }\n\n  componentDidMount() {\n    this.setState((state,props) => ({date: props.date}));\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.date !== prevProps.date) {\n      this.setState((state,props) => ({date: props.date}));\n    }\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  stop() {\n     clearInterval(this.interval);\n   }\n\n  calculateCountdown(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      millisec: 0,\n    };\n\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n       timeLeft.years = Math.floor(diff / (365.25 * 86400));\n       diff -= timeLeft.years * 365.25 * 86400;\n     }\n    if (diff >= 86400) { // 24 * 60 * 60\n       timeLeft.days = Math.floor(diff / 86400);\n       diff -= timeLeft.days * 86400;\n     }\n    if (diff >= 3600) { // 60 * 60\n       timeLeft.hours = Math.floor(diff / 3600);\n       diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n       timeLeft.min = Math.floor(diff / 60);\n       diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n\n  }\n\n  render() {\n    const { days, hours, min, sec } = this.state\n\n    return (\n      <div>\n        <h3 className=\"countdown-text\">{ days } days, { hours } hrs, { min } min, { sec } s remaining</h3>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","import React from 'react';\nimport './App.css';\nimport Card from 'react-bootstrap/card';\nimport Clock from './Clock.js';\n\nclass Timers extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  dateObj(itemdate) {\n    return new Date(itemdate);\n  }\n\n  render() {\n    let timers = this.props.timerData;\n\n    if (Object.keys(timers).length === 0) {\n      return null;\n    }\n\n    if (timers.countdowns === null) {\n      return (\n        <p style={{ color: 'white' }}>You don't have any countdowns, add some!</p>\n      )\n    }\n\n    let timermap = [];\n    for ( var i = 0; i < timers.countdowns.length; i++) {\n      let date = new Date(timers.countdowns[i].time);\n      let dateString = date.toString();\n      let dateEvent = timers.countdowns[i].event;\n      timermap.push({date, dateString, dateEvent});\n    }\n\n    return (\n      timermap.map(item => (\n        <>\n         <Card\n           className='timer-card'\n           bg='light'\n           text='dark'\n           style={{ width: '83rem' }}>\n           <Card.Header>{item.dateEvent}</Card.Header>\n           <Card.Body>\n             <Card.Text>\n               {item.dateString}\n             </Card.Text>\n             <Clock date={item.date}/>\n           </Card.Body>\n         </Card>\n         <br />\n       </>\n    )));\n  }\n }\n\n export default Timers;\n","import React from 'react';\nimport './App.css';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Accordion from 'react-bootstrap/accordion';\nimport Card from 'react-bootstrap/card';\nimport Button from 'react-bootstrap/button';\nimport Timers from './Timers.js';\n\nclass Countdown extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {date: null, eventname: 'Enter event name', refresh: null};\n    this.handleChange = this.handleChange.bind(this);\n    this.onFormSubmit = this.onFormSubmit.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleChange(newdate) {\n    this.setState({\n      startDate: newdate\n    })\n  }\n\n  handleTextChange(event) {\n    this.setState({\n      eventname: event.target.value\n    })\n  }\n\n  onFormSubmit(e) {\n    e.preventDefault();\n    this.setState((state,props) => (\n      {date: state.startDate, eventname: state.eventname}));\n    this.sendEvent();\n  }\n\n  async sendEvent() {\n    //{\"user\":\"user1\",\"event\":\"its a random tuesday\", \"time\":1590125266}\n    let username = this.props.username;\n    let eventname = this.state.eventname;\n    let eventdate = this.state.startDate;\n    let countdownitem = {user: username, event: eventname, time: eventdate.getTime()};\n\n    let response = await fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/setnewcountdown', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(countdownitem)\n    }).then((response) => {\n      if(response.status === 200) {\n        this.setState({refresh: true});\n        this.props.passRefresh(this.state.refresh);\n      } else if(response.status > 399){\n        console.log(\"countdown date has wasnt sent, check errors\");\n      }\n    }).catch(function (err) {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  render() {\n    return (\n      <Accordion className=\"accordion-countdown\">\n        <Card>\n          <Card.Header>\n            <Accordion.Toggle id=\"toggler\" as={Card.Header} eventKey=\"0\">\n              Add new countdown\n            </Accordion.Toggle>\n          </Card.Header>\n          <Accordion.Collapse eventKey=\"0\">\n            <div className=\"countdown-new\">\n              <form id=\"date-form\" onSubmit={ this.onFormSubmit }>\n                <div className=\"form-group\">\n                  <div className=\"event-group\">\n                    <textarea\n                      id=\"event-text\"\n                      placeholder=\"Your event name\"\n                      onChange={this.handleTextChange}>\n                    </textarea>\n                  </div>\n                  <DatePicker\n                    id=\"date-picker\"\n                    selected={this.state.startDate}\n                    onChange={this.handleChange}\n                    showTimeSelect\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    withPortal\n                    placeholderText=\"Choose event date\"/>\n                  <button\n                    className=\"btn btn-primary\">Start Countdown\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n    );\n  }\n}\n\nexport default Countdown;\n","import React from 'react';\nimport './App.css';\nimport Form from 'react-bootstrap/form';\nimport FormControl from 'react-bootstrap/formcontrol';\nimport Button from 'react-bootstrap/button';\n\nclass Navigation extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {username: \"user1\"};\n    this.handleClick = this.handleClick.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleClick(event) {\n    document.getElementById('user-display').innerHTML = \"Welcome \" + this.state.username;\n    document.getElementById('user-name').value = '';\n    this.props.passUserName(this.state.username);\n  }\n\n  handleTextChange(event) {\n    this.setState({\n      username: event.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Form inline>\n          <FormControl\n            type=\"text\"\n            placeholder=\"enter username..\"\n            className=\"mr-sm-2\"\n            id=\"user-name\"\n            onChange={this.handleTextChange} />\n          <Button\n            variant=\"success\"\n            onClick={this.handleClick}>Login</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from 'react';\nimport './App.css';\nimport Countdown from './Countdown.js';\nimport Navigation from './Navigation.js';\nimport Timers from './Timers.js';\nimport Jumbotron from 'react-bootstrap/jumbotron';\n\nclass Mainpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: null, timerData: {}, refresh: null };\n  }\n\n  componentDidMount() {\n    if (this.props.username !== null) {\n      this.getUserEvents(this.props.username);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.refresh !== this.state.refresh) {\n      console.log(\"prevState\", prevState);\n      console.log(\"prevProps\", prevProps);\n\n      console.log(\"does it come here - main update inside if loop \");\n      this.getUserEvents(this.props.username);\n    }\n  }\n\n  getUserEvents(username) {\n    if (username !== null) {\n      let promiseresult = new Promise(resolve => {\n        fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/getuser?id='+username).then(function (response) {\n      \t    resolve(response.json());\n          });\n        }).catch(function (err) {\n      \t  console.warn('Something went wrong.', err);\n        });\n\n      promiseresult.then(result => {\n        this.setState({timerData: result});\n      }, function(error) {\n        console.log(\"there is an error inside promise\", error);;\n      });\n    }\n  }\n\n  getRefresh = (value) => {\n    this.setState({ refresh: value })\n  }\n\n  render() {\n    return (\n      <div className=\"Mainpage\">\n        <Jumbotron>\n          <h1>Hello, {this.props.username}!</h1>\n          <p>\n            You can add a new Event name with a countdown timer by clicking\n            Add below.\n          </p>\n          <p>\n          </p>\n        </Jumbotron>\n        <Countdown username={this.props.username} passRefresh={this.getRefresh}/>\n        <Timers timerData={this.state.timerData} username={this.props.username}/>\n      </div>\n    );\n  }\n}\n\nexport default Mainpage;\n","import React from 'react';\nimport Form from 'react-bootstrap/form';\nimport Button from 'react-bootstrap/button';\nimport Card from 'react-bootstrap/card';\nimport CardColumns from 'react-bootstrap/cardcolumns';\nimport './App.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: \"\",\n      email: \"\",\n      loginerror: \"\",\n      signuperror: \"\",\n      redirect: false\n    };\n    this.handleUserChange = this.handleUserChange.bind(this);\n    this.handleEmailChange = this.handleEmailChange.bind(this);\n    this.login = this.login.bind(this);\n    this.signup = this.signup.bind(this);\n  }\n\n  login(e) {\n    e.preventDefault();\n    let user = this.state.user;\n    let loginData = {user: user};\n\n    fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(loginData)\n    }).then((response) => {\n      if(response.status === 200) {\n        this.setState({loginerror: \"\", redirect: true});\n        this.props.passUserName(this.state.user);\n        this.props.passRedirect(this.state.redirect);\n      } else if(response.status > 399){\n        this.setState({loginerror: \"Username doesn't exist\"});\n      }\n    }).catch((err) => {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  signup(e) {\n    e.preventDefault();\n    let user = this.state.user;\n    let email = this.state.email;\n    let signupData = {user: user, email: email};\n\n    fetch('https://law20kowah.execute-api.us-west-2.amazonaws.com/prod/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json;charset=utf-8'\n    },\n      body: JSON.stringify(signupData)\n    }).then((response) => {\n        if(response.status === 200) {\n          this.setState({signuperror: \"\", redirect: true});\n          this.props.passUserName(this.state.user);\n          this.props.passRedirect(this.state.redirect);\n        } else if(response.status > 399){\n          this.setState({signuperror: \"Username is taken, choose another one.\"});\n        }\n    }).catch(function (err) {\n  \t  console.warn('Something went wrong.', err);\n    });\n  }\n\n  handleUserChange(event) {\n    this.setState({\n      user: event.target.value\n    })\n  }\n\n  handleEmailChange(event) {\n    this.setState({\n      email: event.target.value\n    })\n  }\n\n  render() {\n    const { loginerror, signuperror } = this.state;\n\n    return (\n      <CardColumns>\n        <Card className=\"p-3\">\n          <Card.Header>Been here before?\n            <Card.Title className=\"text-muted\">Welcome back!</Card.Title>\n          </Card.Header>\n          <Form>\n            <Form.Group controlId=\"formBasicUser\">\n              <Form.Label sm=\"2\">Username</Form.Label>\n              <Form.Control\n               type=\"text\"\n               placeholder=\"Username\"\n               onChange={this.handleUserChange} />\n               <Form.Text className=\"text-muted\">\n                  {loginerror}\n              </Form.Text>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.login}>\n              Login\n            </Button>\n          </Form>\n        </Card>\n        <Card className=\"p-3\">\n          <Card.Header>First time?\n            <Card.Title className=\"text-muted\">Hey there, let's get to know you</Card.Title>\n          </Card.Header>\n          <Form>\n            <Form.Group controlId=\"formBasicUser\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Username\"\n                onChange={this.handleUserChange} />\n                <Form.Text className=\"text-muted\">\n                   {signuperror}\n               </Form.Text>\n            </Form.Group>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                onChange={this.handleEmailChange} />\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\" onClick={this.signup}>\n              Signup\n            </Button>\n          </Form>\n        </Card>\n      </CardColumns>\n    );\n  }\n}\n\nexport default Login;\n","import React from 'react';\nimport './App.css';\nimport Mainpage from './Mainpage.js';\nimport Login from './Login.js';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Header, Icon, Image, Divider } from 'semantic-ui-react';\nimport logo from './images/icon.png';\n\nconst HeaderIcon = () => (\n  <Header as='h1' icon>Count Me In!\n    <Icon name='clock' />\n    <Divider hidden />\n    <Header.Subheader>\n      Create personalized countdown timers\n    </Header.Subheader>\n    <Image src={logo} fluid />\n  </Header>\n)\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { username: null, redirect: false };\n  }\n  \n  getUsername = (navUsername) => {\n    this.setState({ username: navUsername })\n  }\n\n  getRedirect = (value) => {\n    this.setState({ redirect: value })\n  }\n\n  render() {\n    if(this.state.redirect === false) {\n      return (\n          <div className=\"App\">\n            <HeaderIcon />\n            <Login passUserName={this.getUsername} passRedirect={this.getRedirect}/>\n          </div>\n        );\n      } else {\n          return (\n            <div className=\"App\">\n              <Mainpage username={this.state.username}/>\n            </div>\n          );\n      }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}